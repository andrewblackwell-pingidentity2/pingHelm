{
	"info": {
		"_postman_id": "b969c937-901d-4cb2-b3e7-c241d049810e",
		"name": "pds-pd",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PD Heartbeat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var _retries=pm.variables.has(\"_retries\")?pm.variables.get(\"_retries\"):pm.variables.get(\"request_retry_count\");",
							"",
							"// Checks to see if the server actually responded",
							"if (pm.response.code == 200 ) {",
							"    tests['Status code is ' + responseCode.code] = responseCode.code === 200;",
							"",
							"    var jsonData = JSON.parse(responseBody);",
							"    tests['State = ' + jsonData['availability-state']] = jsonData['availability-state'] === \"AVAILABLE\";",
							"} else {",
							"    if (!_retries){",
							"        _retries=10;",
							"    }",
							"    ",
							"    if ( _retries > 0 ) {",
							"        _retries--;",
							"        pm.environment.set(\"_retries\", _retries);",
							"        var timeout=_.random(1000,15000);",
							"        console.log(\"Attempting next connection in \"+timeout+\"ms ...\");",
							"        // loop back to this request (request.name) after the timeout elapses",
							"        setTimeout(function() {postman.setNextRequest(request.name);}, timeout);",
							"    } else { ",
							"        postman.setNextRequest(null);",
							"    }",
							"}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/available-state",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"available-state"
					]
				}
			},
			"response": []
		},
		{
			"name": "PDS Heartbeat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var _retries=pm.variables.has(\"_retries\")?pm.variables.get(\"_retries\"):pm.variables.get(\"request_retry_count\");",
							"var jsonData = JSON.parse(responseBody);",
							"var _sync_pipe_name=pm.variables.get(\"sync_pipe_name\");",
							"",
							"// Checks to see if the server actually responded",
							"if (pm.response.code == 200 && ",
							"    jsonData['started'] === \"true\" &&",
							"    jsonData['source-is-connected'] === \"true\" && ",
							"    jsonData['destination-is-connected'] === \"true\") {",
							"    tests['Status code is ' + responseCode.code] = responseCode.code === 200;",
							"    tests['pipe-name = ' + jsonData['sync-pipe-name']] = jsonData['sync-pipe-name'] === _sync_pipe_name;",
							"    tests['started = ' + jsonData['started']] = jsonData['started'] === \"true\";",
							"    tests['source-is-connected = ' + jsonData['source-is-connected']] = jsonData['source-is-connected'] === \"true\";",
							"    tests['destination-is-connected = ' + jsonData['destination-is-connected']] = jsonData['destination-is-connected'] === \"true\";",
							"} else {",
							"    if (!_retries){",
							"        _retries=10;",
							"    }",
							"    ",
							"    if ( _retries > 0 ) {",
							"        _retries--;",
							"        pm.environment.set(\"_retries\", _retries);",
							"        var timeout=_.random(1000,15000);",
							"        console.log(\"Attempting next connection in \"+timeout+\"ms ...\");",
							"        // loop back to this request (request.name) after the timeout elapses",
							"        setTimeout(function() {postman.setNextRequest(request.name);}, timeout);",
							"    } else { ",
							"        postman.setNextRequest(null);",
							"    }",
							"}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{PDS_ENGINE_PRIVATE_HOSTNAME}}:{{PDS_ENGINE_PRIVATE_PORT_HTTPS}}/directory/v1/cn=Sync Pipe Monitor: {{sync_pipe_name}},cn=monitor",
					"protocol": "https",
					"host": [
						"{{PDS_ENGINE_PRIVATE_HOSTNAME}}"
					],
					"port": "{{PDS_ENGINE_PRIVATE_PORT_HTTPS}}",
					"path": [
						"directory",
						"v1",
						"cn=Sync Pipe Monitor: {{sync_pipe_name}},cn=monitor"
					]
				}
			},
			"response": []
		},
		{
			"name": "PD SOURCE - Pull Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests['Status code is ' + responseCode.code] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests['# of source users = ' + jsonData.size] = jsonData.size === 4;",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/directory/v1/ou=people,ou=source,o=sync/subtree?searchScope=singlelevel",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"directory",
						"v1",
						"ou=people,ou=source,o=sync",
						"subtree"
					],
					"query": [
						{
							"key": "searchScope",
							"value": "singlelevel"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PD SOURCE - Create Initial User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests['Status code is ' + responseCode.code] = responseCode.code === 201;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests['Added ' + jsonData['_dn']] = jsonData['_dn'] === \"uid=\" + pm.variables.get(\"regular_user\") + \",ou=people,ou=source,\" + pm.variables.get(\"base_dn\");;",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": [ \"na\" ],\n    \"sn\": [ \"postman\" ],\n    \"cn\": [ \"Postman User.0\" ],\n    \"givenName\": [ \"user.0\" ],\n    \"userPassword\": [ \"{{regular_pwd}}\"\t],\n    \"uid\": [ \"{{regular_user}}\" ],\n    \"objectClass\": [\n        \"top\",\n        \"person\",\n        \"organizationalPerson\",\n        \"inetOrgPerson\"\n    ],\n    \"_dn\": \"uid={{regular_user}},ou=people,ou=source,{{base_dn}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/directory/v1",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"directory",
						"v1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PD DEST - Get User after ADD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests['Status code is ' + responseCode.code] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests['Added ' + jsonData['_dn']] = jsonData['_dn'] === \"uid=\" + pm.variables.get(\"regular_user\") + \",ou=people,ou=destination,\" + pm.variables.get(\"base_dn\");;",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){},2000);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/directory/v1/uid={{regular_user}},ou=people,ou=destination,{{base_dn}}",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"directory",
						"v1",
						"uid={{regular_user}},ou=people,ou=destination,{{base_dn}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PD SOURCE - Modify User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests['Status code is ' + responseCode.code] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests['description = ' + jsonData.description[0]] = jsonData.description[0] === pm.variables.get(\"regular_user\");",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": [\"{{regular_user}}\"]\n}"
				},
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/directory/v1/uid={{regular_user}},ou=people,ou=source,{{base_dn}}",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"directory",
						"v1",
						"uid={{regular_user}},ou=people,ou=source,{{base_dn}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PD DEST - Get User after MOD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests['Status code is ' + responseCode.code] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests['description = ' + jsonData.description[0]] = jsonData.description[0] === pm.variables.get(\"regular_user\");",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){},2000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/directory/v1/uid={{regular_user}},ou=people,ou=destination,{{base_dn}}",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"directory",
						"v1",
						"uid={{regular_user}},ou=people,ou=destination,{{base_dn}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PD SOURCE - Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests['Status code is ' + responseCode.code] = responseCode.code === 204;",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/directory/v1/uid={{regular_user}},ou=people,ou=source,{{base_dn}}",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"directory",
						"v1",
						"uid={{regular_user}},ou=people,ou=source,{{base_dn}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PD DEST - Get User after DEL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests['Status code is ' + responseCode.code] = responseCode.code === 404;",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){},2000);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{K8S_STATEFUL_SET_SERVICE_NAME}}:{{pd_port_https}}/directory/v1/uid={{regular_user}},ou=people,ou=destination,{{base_dn}}",
					"protocol": "https",
					"host": [
						"{{K8S_STATEFUL_SET_SERVICE_NAME}}"
					],
					"port": "{{pd_port_https}}",
					"path": [
						"directory",
						"v1",
						"uid={{regular_user}},ou=people,ou=destination,{{base_dn}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{pd_admin_pwd}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{pd_admin_user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "request_retry_count",
			"value": "10",
			"type": "string"
		},
		{
			"key": "request_retry_delay_max_ms",
			"value": "15000",
			"type": "string"
		},
		{
			"key": "request_retry_delay_min_ms",
			"value": "1000",
			"type": "string"
		},
		{
			"key": "admin_user",
			"value": "administrator",
			"type": "string"
		},
		{
			"key": "admin_pwd",
			"value": "2FederateM0re",
			"type": "string"
		},
		{
			"key": "pd_admin_user",
			"value": "cn={{admin_user}}",
			"type": "string"
		},
		{
			"key": "pd_admin_pwd",
			"value": "{{admin_pwd}}",
			"type": "string"
		},
		{
			"key": "pd_hostname",
			"value": "pingdirectory",
			"type": "string"
		},
		{
			"key": "pds_hostname",
			"value": "pingdatasync",
			"type": "string"
		},
		{
			"key": "pd_port_https",
			"value": "1443",
			"type": "string"
		},
		{
			"key": "pds_port_https",
			"value": "1443",
			"type": "string"
		},
		{
			"key": "regular_user",
			"value": "postman.user.0",
			"type": "string"
		},
		{
			"key": "regular_pwd",
			"value": "{{admin_pwd}}",
			"type": "string"
		},
		{
			"key": "base_dn",
			"value": "o=sync",
			"type": "string"
		},
		{
			"key": "sync_pipe_name",
			"value": "pingdirectory_source-to-pingdirectory_destination",
			"type": "string"
		}
	]
}